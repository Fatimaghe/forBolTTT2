import '../models/customer.dart';
import '../models/opportunity.dart';
import '../models/contact.dart';
import '../models/product.dart';
import '../models/quotation.dart';
import '../models/sales_order.dart';
import '../models/invoice.dart';
import '../models/payment.dart';
import '../models/purchase_order.dart';

import '../models/location.dart';
import '../models/stock_transfer.dart';
import '../models/receipt.dart';
import '../models/delivery.dart';

class DummyData {
  static List<Customer> customers = [];
  static List<Opportunity> opportunities = [];

  static List<Contact> contacts = [
    Contact(
      id: '1',
      name: 'John Doe',
      email: 'john.doe@acme.com',
      phone: '+1 (555) 123-4567',
      mobile: '+1 (555) 123-4568',
      jobTitle: 'CEO',
      department: 'Executive',
      company: 'Acme Corporation',
      address: '123 Business Ave, New York, NY 10001',
      city: 'New York',
      country: 'United States',
      type: 'customer',
      notes: 'Primary decision maker for technology purchases',
      isCustomer: true,
      isSupplier: false,
      tags: ['VIP', 'Decision Maker'],
      createdAt: DateTime.now().subtract(const Duration(days: 30)),
    ),
    Contact(
      id: '2',
      name: 'Jane Smith',
      email: 'jane.smith@globalsolutions.com',
      phone: '+1 (555) 987-6543',
      mobile: '+1 (555) 987-6544',
      jobTitle: 'CTO',
      department: 'Technology',
      company: 'Global Solutions Inc',
      address: '456 Corporate Blvd, Los Angeles, CA 90210',
      city: 'Los Angeles',
      country: 'United States',
      type: 'customer',
      notes: 'Technical contact for implementation projects',
      isCustomer: true,
      isSupplier: false,
      tags: ['Technical', 'Implementation'],
      createdAt: DateTime.now().subtract(const Duration(days: 25)),
    ),
  ];

  static List<Product> products = [
    Product(
      id: '1',
      name: 'Enterprise Software License',
      defaultCode: 'ESL-001',
      description: 'Comprehensive enterprise software solution with full feature set',
      categId: 1,
      standardPrice: 80.0,
      listPrice: 120.0,
      canBeSold: true,
      canBePurchased: false,
      productType: 'service',
      uomId: 1,
      uomName: 'Units',
      barcode: '1234567890123',
      weight: 0.0,
      image: '',
      createdAt: DateTime.now().subtract(const Duration(days: 60)),
    ),
    Product(
      id: '2',
      name: 'Cloud Storage Plan',
      defaultCode: 'CSP-002',
      description: 'Secure cloud storage solution with 1TB capacity',
      categId: 2,
      standardPrice: 15.0,
      listPrice: 25.0,
      canBeSold: true,
      canBePurchased: false,
      productType: 'service',
      uomId: 2,
      uomName: 'Monthly',
      barcode: '1234567890124',
      weight: 0.0,
      image: '',
      createdAt: DateTime.now().subtract(const Duration(days: 45)),
    ),
    Product(
      id: '3',
      name: 'Professional Services',
      defaultCode: 'PS-003',
      description: 'Expert consulting and implementation services',
      categId: 3,
      standardPrice: 100.0,
      listPrice: 150.0,
      canBeSold: true,
      canBePurchased: false,
      productType: 'service',
      uomId: 3,
      uomName: 'Hours',
      barcode: '1234567890125',
      weight: 0.0,
      image: '',
      createdAt: DateTime.now().subtract(const Duration(days: 30)),
    ),
  ];

  static List<Quotation> quotations = [
    Quotation(
      id: '1',
      number: 'QUO/2024/001',
      customerId: '1',
      customerName: 'Acme Corporation',
      quotationDate: DateTime.now().subtract(const Duration(days: 5)),
      validUntil: DateTime.now().add(const Duration(days: 25)),
      status: 'sent',
      salesPerson: 'John Smith',
      subtotal: 3400.0,
      taxAmount: 340.0,
      totalAmount: 3740.0,
      paymentTerms: 'Net 30',
      reference: 'Enterprise Package Quote',
      lines: [
        QuotationLine(
          id: '1',
          productId: '1',
          productName: 'Enterprise Software License',
          description: 'Annual license for 50 users',
          quantity: 50,
          unitPrice: 120.0,
          discount: 10.0,
          subtotal: 5400.0,
        ),
        QuotationLine(
          id: '2',
          productId: '2',
          productName: 'Cloud Storage Plan',
          description: '12 months cloud storage',
          quantity: 12,
          unitPrice: 25.0,
          discount: 0.0,
          subtotal: 300.0,
        ),
      ],
      notes: 'Enterprise package with volume discount',
      createdAt: DateTime.now().subtract(const Duration(days: 5)),
      updatedAt: DateTime.now().subtract(const Duration(days: 2)),
    ),
  ];

  static List<SalesOrder> salesOrders = [
    SalesOrder(
      id: '1',
      number: 'SO/2024/001',
      customerId: '1',
      customerName: 'Acme Corporation',
      orderDate: DateTime.now().subtract(const Duration(days: 3)),
      deliveryDate: DateTime.now().add(const Duration(days: 7)),
      status: 'confirmed',
      salesPerson: 'John Smith',
      subtotal: 3400.0,
      taxAmount: 340.0,
      totalAmount: 3740.0,
      paymentTerms: 'Net 30',
      reference: 'Enterprise Package Order',
      lines: [
        SalesOrderLine(
          id: '1',
          productId: '1',
          productName: 'Enterprise Software License',
          description: 'Annual license for 50 users',
          quantity: 50,
          unitPrice: 120.0,
          discount: 10.0,
          subtotal: 5400.0,
        ),
      ],
      notes: 'Confirmed order for enterprise package',
      createdAt: DateTime.now().subtract(const Duration(days: 3)),
      updatedAt: DateTime.now().subtract(const Duration(days: 1)),
    ),
  ];

  static List<Invoice> invoices = [
    Invoice(
      id: '1',
      number: 'INV/2024/001',
      customerId: '1',
      customerName: 'Acme Corporation',
      invoiceDate: DateTime.now().subtract(const Duration(days: 2)),
      dueDate: DateTime.now().add(const Duration(days: 28)),
      status: 'posted',
      subtotal: 3400.0,
      taxAmount: 340.0,
      totalAmount: 3740.0,
      paymentTerms: 'Net 30',
      reference: 'Enterprise Package Invoice',
      lines: [
        InvoiceLine(
          id: '1',
          productId: '1',
          productName: 'Enterprise Software License',
          description: 'Annual license for 50 users',
          quantity: 50,
          unitPrice: 120.0,
          discount: 10.0,
          taxRate: 10.0,
          subtotal: 5400.0,
        ),
        InvoiceLine(
          id: '2',
          productId: '2',
          productName: 'Cloud Storage Plan',
          description: '12 months cloud storage',
          quantity: 12,
          unitPrice: 25.0,
          discount: 0.0,
          taxRate: 10.0,
          subtotal: 300.0,
        ),
      ],
      createdAt: DateTime.now().subtract(const Duration(days: 2)),
      updatedAt: DateTime.now().subtract(const Duration(days: 1)),
    ),
    Invoice(
      id: '2',
      number: 'INV/2024/002',
      customerId: '2',
      customerName: 'Global Solutions Inc',
      invoiceDate: DateTime.now().subtract(const Duration(days: 1)),
      dueDate: DateTime.now().add(const Duration(days: 29)),
      status: 'draft',
      subtotal: 2272.5,
      taxAmount: 227.25,
      totalAmount: 2499.75,
      paymentTerms: 'Net 30',
      reference: 'Consulting Services Invoice',
      lines: [
        InvoiceLine(
          id: '3',
          productId: '3',
          productName: 'Professional Services',
          description: 'Consulting hours for Q1',
          quantity: 15,
          unitPrice: 150.0,
          discount: 0.0,
          taxRate: 10.0,
          subtotal: 2250.0,
        ),
        InvoiceLine(
          id: '4',
          productId: '2',
          productName: 'Cloud Storage Plan',
          description: '1 month cloud storage',
          quantity: 1,
          unitPrice: 25.0,
          discount: 0.0,
          taxRate: 10.0,
          subtotal: 25.0,
        ),
      ],
      createdAt: DateTime.now().subtract(const Duration(days: 1)),
      updatedAt: DateTime.now(),
    ),
    Invoice(
      id: '3',
      number: 'INV/2024/003',
      customerId: '3',
      customerName: 'Tech Innovators LLC',
      invoiceDate: DateTime.now(),
      dueDate: DateTime.now().add(const Duration(days: 30)),
      status: 'paid',
      subtotal: 1181.82,
      taxAmount: 118.18,
      totalAmount: 1300.0,
      paymentTerms: 'Net 30',
      reference: '',
      lines: const [],
      createdAt: DateTime.now(),
      updatedAt: DateTime.now(),
    ),
  ];

  static List<Location> locations = [
    Location(
      id: '1',
      name: 'Main Warehouse',
      type: 'internal',
      address: '123 Storage St, Industrial District, NY 10001',
      completeAddress: '123 Storage St, Industrial District, NY 10001',
      usage: 'internal',
      barcode: 'WH001',
      isActive: true,
      isScrapLocation: false,
      isReturnLocation: false,
      parentLocationId: '',
      createdAt: DateTime.now().subtract(const Duration(days: 90)),
    ),
    Location(
      id: '2',
      name: 'Customer Location',
      type: 'customer',
      address: 'Customer Delivery Address',
      completeAddress: 'Customer Delivery Address',
      usage: 'customer',
      barcode: 'CUST001',
      isActive: true,
      isScrapLocation: false,
      isReturnLocation: false,
      parentLocationId: '',
      createdAt: DateTime.now().subtract(const Duration(days: 60)),
    ),
  ];

  static List<StockTransfer> stockTransfers = [
    StockTransfer(
      id: '1',
      reference: 'WH/OUT/2024/001',
      sourceLocationId: '1',
      sourceLocationName: 'Main Warehouse',
      destinationLocationId: '2',
      destinationLocationName: 'Customer Location',
      scheduledDate: DateTime.now().add(const Duration(days: 1)),
      status: 'ready',
      responsiblePerson: 'John Smith',
      lines: [
        StockTransferLine(
          id: '1',
          productId: '1',
          productName: 'Enterprise Software License',
          quantityDemand: 10.0,
          quantityDone: 0.0,
          unit: 'Units',
          demandQuantity: 10.0,
          doneQuantity: 0.0,
        ),
      ],
      notes: 'Transfer for customer delivery',
      createdAt: DateTime.now().subtract(const Duration(days: 1)),
    ),
  ];

  static List<Receipt> receipts = [
    Receipt(
      id: '1',
      number: 'WH/IN/2024/001',
      supplierId: '1',
      supplierName: 'Tech Supplier Inc',
      purchaseOrderId: 'PO/2024/001',
      receiptDate: DateTime.now().subtract(const Duration(days: 1)),
      status: 'done',
      locationId: '1',
      locationName: 'Main Warehouse',
      lines: [
        ReceiptLine(
          id: '1',
          productId: '1',
          productName: 'Server Hardware',
          quantityOrdered: 2.0,
          quantityReceived: 2.0,
          unitCost: 2500.0,
          lotNumber: 'LOT001',
        ),
      ],
      notes: 'Received in good condition',
      createdAt: DateTime.now().subtract(const Duration(days: 1)),
    ),
  ];

  static List<Delivery> deliveries = [
    Delivery(
      id: '1',
      number: 'WH/OUT/2024/001',
      customerId: '1',
      customerName: 'Acme Corporation',
      salesOrderId: 'SO/2024/001',
      deliveryDate: DateTime.now().add(const Duration(days: 2)),
      status: 'ready',
      sourceLocationId: '1',
      sourceLocationName: 'Main Warehouse',
      destinationAddress: '123 Business Ave, New York, NY 10001',
      lines: [
        DeliveryLine(
          id: '1',
          productId: '1',
          productName: 'Enterprise Software License',
          quantityOrdered: 50.0,
          quantityDelivered: 50.0,
          serialNumbers: 'SN001-SN050',
        ),
      ],
      trackingNumber: 'TRK123456789',
      carrier: 'FedEx',
      notes: 'Handle with care',
      createdAt: DateTime.now().subtract(const Duration(days: 1)),
    ),
  ];
}